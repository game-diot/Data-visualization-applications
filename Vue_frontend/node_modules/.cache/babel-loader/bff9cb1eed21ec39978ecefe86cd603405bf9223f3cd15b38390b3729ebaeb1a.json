{"ast":null,"code":"export default {\n  data() {\n    return {\n      LoginForm: {\n        account: '',\n        password: ''\n      },\n      LoginRules: {\n        account: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    TopicChange() {\n      const root = document.documentElement;\n      root.getAttribute('data-theme') == 'dark' ? root.removeAttribute('data-theme') : root.setAttribute('data-theme', 'dark');\n    },\n    handleLogin() {\n      if (!this.LoginForm.account) {\n        alert('请输入账号！');\n        return false;\n      }\n      if (!this.LoginForm.password) {\n        alert('请输入密码！');\n      }\n      //  let json ={ ...this.LoginForm}\n      //  let _this = this;\n      //  _this.axios.post(`${_this.baseurl}/user/userLogin`,json, {\n      //     headers:{\n      //        \"Content-Type\":\"application/json\",\n      //        \"Authorization\":''\n      //     }\n      //  }).then(function(res){\n      //    if(res.data.code == 1){\n      //       localStorage.setItem('token',res.data.token);\n      //       console.log(localStorage.getItem.token)//调试用\n      //       setTimeout(() =>{_this.$router.replace({\n      //          path:'/index'\n      //       })},100)\n      //    }else{\n      //       alert(res.data.msg);\n      //    }\n      //  })\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["data","LoginForm","account","password","LoginRules","required","message","trigger","methods","TopicChange","root","document","documentElement","getAttribute","removeAttribute","setAttribute","handleLogin","alert","mounted"],"sources":["src/views/LoginPage.vue"],"sourcesContent":["<template>\r\n<div class=\"mainContainer\">\r\n    <div class=\"loginAd\"></div>\r\n    <div class=\"loginArea\">\r\n      <div class=\"nav\">\r\n        <div class=\"btnContainer\">\r\n          <div class=\"navBtn\" @click=\"TopicChange\">切换主题</div>\r\n          <div class=\"navBtn\"></div>\r\n          <div class=\"navBtn\"></div>\r\n        </div>\r\n      </div>\r\n        <div class=\"loginContainer\">\r\n            <div class=\"loginBox\">\r\n               <el-form\r\n                  :model=\"LoginForm\"\r\n                  :rules=\"LoginRules\"\r\n                  ref=\"loginFormRef\"\r\n               >\r\n                 <el-form-item prop=\"account\" >\r\n                  <el-input\r\n                   v-model=\"LoginForm.account\"\r\n                   placeholder=\"请输入账号\"\r\n\r\n                  \r\n                  />\r\n                 </el-form-item>\r\n                 <el-form-item prop=\"pwd\">\r\n                  <el-input\r\n                   v-model=\"LoginForm.password\"\r\n                   type=\"password\"\r\n                   placeholder-=\"请输入密码\"\r\n                  />\r\n                 </el-form-item>\r\n                <el-form-item>\r\n                  <el-button\r\n                    type=\"primary\"\r\n                    class=\"loginBtn\"\r\n                    @click=\"handleLogin\"\r\n                  >\r\n                  </el-button>  \r\n\r\n                </el-form-item>\r\n               </el-form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n          \r\n</template>\r\n<script>\r\n \r\n export default {\r\n        data(){\r\n            return {\r\n              LoginForm:{\r\n                account:'',\r\n                password:'',\r\n              },\r\n              LoginRules:{\r\n                account:[{required:true, message:'请输入账号', trigger:'blur'}],\r\n                password:[{required:true, message:'请输入密码', trigger:'blur'}]\r\n              }\r\n            }\r\n        },\r\n        methods:{\r\n         TopicChange(){\r\n                const root = document.documentElement;\r\n                root.getAttribute('data-theme') == 'dark' \r\n                ? root.removeAttribute('data-theme') \r\n                : root.setAttribute('data-theme', 'dark'\r\n\r\n         )},\r\n         handleLogin(){\r\n                 if(!this.LoginForm.account){\r\n                   alert('请输入账号！');\r\n                   return false;\r\n                 }\r\n                 if(!this.LoginForm.password){\r\n                   alert('请输入密码！')\r\n                 }\r\n                //  let json ={ ...this.LoginForm}\r\n                //  let _this = this;\r\n                //  _this.axios.post(`${_this.baseurl}/user/userLogin`,json, {\r\n                //     headers:{\r\n                //        \"Content-Type\":\"application/json\",\r\n                //        \"Authorization\":''\r\n                //     }\r\n                //  }).then(function(res){\r\n                //    if(res.data.code == 1){\r\n                //       localStorage.setItem('token',res.data.token);\r\n                //       console.log(localStorage.getItem.token)//调试用\r\n                //       setTimeout(() =>{_this.$router.replace({\r\n                //          path:'/index'\r\n                //       })},100)\r\n                //    }else{\r\n                //       alert(res.data.msg);\r\n                //    }\r\n                //  })\r\n\r\n         }\r\n         \r\n\r\n        },\r\n      \r\nmounted() {\r\n     \r\n            },\r\n\r\n            \r\n    }\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box; \r\n}\r\n:root{ --ad:aqua;\r\n       --nav:rgb(247,247,247); \r\n       --navBorder:solid black 1px;\r\n       --loginContainer:rgb(200, 200, 200); \r\n       --loginbox:rgb(255,255,255); \r\n       --navBtn:rgb(133, 174, 174);\r\n       --navbtnBorder:#333;\r\n      }\r\n\r\n\r\n\r\n[data-theme='dark'] { \r\n     --ad:gray;\r\n       --nav:rgb(247,247,247); \r\n       --navBorder:solid white 1px;\r\n       --loginContainer:rgb(95, 93, 93); \r\n       --loginbox:rgb(161, 157, 157); \r\n       --navBtn:rgb(64, 66, 66);\r\n       --navbtnBorder:#cfcccc;\r\n }\r\n\r\n\r\n  .mainContainer{\r\n    display: flex;\r\n    position: absolute;\r\n    height: 100vh;\r\n    width:100vw;\r\n  }\r\n  .loginAd{\r\n    height: 100%;\r\n    width:15%;\r\n   \r\n    background-color:    var(--ad);/*  aque*/ \r\n  }\r\n  .loginArea{\r\n    height:100%;\r\n    width:85%;\r\n   \r\n  }\r\n  \r\n  \r\n.nav{\r\n    width: 100%;\r\n    height: 10%;\r\n    background-color:var(--nav); /*rgb(247, 247, 247);*/\r\n    display: flex;\r\n    justify-content: end;\r\n    gap: 5px;\r\n    border-bottom:  var(--navBorder) /*solid black 1px;*/\r\n  }\r\n  .btnContainer{\r\n    display: flex;\r\n    gap:5px;\r\n    margin-right: 10px;\r\n  }\r\n  .loginContainer{\r\n    width: 100%;\r\n    height: 90%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color:var(--loginContainer) /* rgb(200, 200, 200);*/\r\n  }\r\n  .loginBox{\r\n    background-color:var(--loginBox); /*rgb(255, 255, 255);*/\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap:10px;\r\n    height:500px;\r\n    width:400px;\r\n  }\r\n  .navBtn{\r\n    height:100%;\r\n    width:80px;\r\n    position:relative;\r\n    background-color: var(--navBtn);   /* rgb(133, 174, 174);*/\r\n  }\r\n  .navBtn::after{\r\n    content: '';\r\n    position: absolute;\r\n    top:50%;\r\n    right: 0;\r\n    transform:translateY(-50%);\r\n    width:2px;\r\n    height:60px;\r\n    background:var(--navBtnBorder);  /*#333 ;*/\r\n  }\r\n  \r\n</style>\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAoDA;EACAA,KAAA;IACA;MACAC,SAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,OAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAJ,QAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,MAAAC,IAAA,GAAAC,QAAA,CAAAC,eAAA;MACAF,IAAA,CAAAG,YAAA,2BACAH,IAAA,CAAAI,eAAA,iBACAJ,IAAA,CAAAK,YAAA,qBAEA;IAAA;IACAC,YAAA;MACA,UAAAf,SAAA,CAAAC,OAAA;QACAe,KAAA;QACA;MACA;MACA,UAAAhB,SAAA,CAAAE,QAAA;QACAc,KAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEA;EAGA;EAEAC,QAAA,GAEA;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}